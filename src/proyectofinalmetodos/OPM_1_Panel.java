/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinalmetodos;

import java.awt.Font;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Morales
 */
public class OPM_1_Panel extends javax.swing.JPanel {

    Validate V = new Validate();
    Mensaje M = new Mensaje();
    private final int TABLE_HEIGHT = 271;
    
    
    public OPM_1_Panel(JButton backButton, int x_button, int y_button, JLabel Titulo) {
        initComponents();
        int titulo_x = 586;
        int titulo_y = 80;
        this.add(backButton);
        backButton.setBounds(x_button, y_button, 50, 50);
        this.add(Titulo); 
        Titulo.setBounds(200, Math.abs(y_button - (titulo_y/2)), titulo_x, titulo_y);
        this.validate();
        
        //Inicializar componentes
        OPM_1_A_Rows.setEditor(new JSpinner.DefaultEditor(OPM_1_A_Rows));
        OPM_1_A_Columns.setEditor(new JSpinner.DefaultEditor(OPM_1_A_Columns));
        
        OPM_1_Matrix_A.setTableHeader(null); 
        OPM_1_Matrix_Output.setTableHeader(null);
        
        changeTable(OPM_1_Matrix_A, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        changeTable(OPM_1_Matrix_Output, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        setButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OPM_1_Matrix_A = new javax.swing.JTable();
        OPM_1_A_Rows = new javax.swing.JSpinner();
        OPM_1_A_Columns = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        OPM_1_Matrix_Output = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        OPM_1_n_Input = new javax.swing.JTextField();
        OPM_1_TranButton = new javax.swing.JButton();
        OPM_1_DetButton = new javax.swing.JButton();
        OPM_1_InverseButton = new javax.swing.JButton();
        OPM_1_EscalarButton = new javax.swing.JButton();
        OPM_1_ChosenText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(185, 219, 255), 4));
        setEnabled(false);

        OPM_1_Matrix_A.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        OPM_1_Matrix_A.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        OPM_1_Matrix_A.setGridColor(new java.awt.Color(204, 204, 204));
        OPM_1_Matrix_A.setRowSelectionAllowed(false);
        OPM_1_Matrix_A.setShowGrid(true);
        OPM_1_Matrix_A.getTableHeader().setResizingAllowed(false);
        OPM_1_Matrix_A.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(OPM_1_Matrix_A);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        OPM_1_A_Rows.setModel(new javax.swing.SpinnerNumberModel(2, 1, 5, 1));
        OPM_1_A_Rows.setToolTipText("Cantidad de renglones de A");
        OPM_1_A_Rows.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OPM_1_A_RowsStateChanged(evt);
            }
        });

        OPM_1_A_Columns.setModel(new javax.swing.SpinnerNumberModel(2, 1, 5, 1));
        OPM_1_A_Columns.setToolTipText("Cantidad de columnas de A");
        OPM_1_A_Columns.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                OPM_1_A_ColumnsStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(185, 219, 255));
        jLabel1.setText("A");

        OPM_1_Matrix_Output.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        OPM_1_Matrix_Output.setToolTipText("Matriz resultante de operación");
        OPM_1_Matrix_Output.setGridColor(new java.awt.Color(204, 204, 204));
        OPM_1_Matrix_Output.setRowSelectionAllowed(false);
        OPM_1_Matrix_Output.setShowGrid(true);
        OPM_1_Matrix_Output.getTableHeader().setResizingAllowed(false);
        OPM_1_Matrix_Output.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(OPM_1_Matrix_Output);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 30)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("=");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 30)); // NOI18N
        jLabel3.setText("Resultado");

        OPM_1_n_Input.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        OPM_1_n_Input.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        OPM_1_n_Input.setToolTipText("Valor numérico de n");

        OPM_1_TranButton.setText("<html>A<sup>T</sup></html>");
        OPM_1_TranButton.setToolTipText("Matriz transpuesta de A");
        OPM_1_TranButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPM_1_TranButtonActionPerformed(evt);
            }
        });

        OPM_1_DetButton.setText("|A|");
        OPM_1_DetButton.setToolTipText("Determinante de A");
        OPM_1_DetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPM_1_DetButtonActionPerformed(evt);
            }
        });

        OPM_1_InverseButton.setText("<html>A<sup>-1</sup></html>");
        OPM_1_InverseButton.setToolTipText("Matriz inversa de A");
        OPM_1_InverseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPM_1_InverseButtonActionPerformed(evt);
            }
        });

        OPM_1_EscalarButton.setText("n*A");
        OPM_1_EscalarButton.setToolTipText("Multiplicación escalar de n*A");
        OPM_1_EscalarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPM_1_EscalarButtonActionPerformed(evt);
            }
        });

        OPM_1_ChosenText.setEditable(false);
        OPM_1_ChosenText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        OPM_1_ChosenText.setToolTipText("Operación escogida");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(185, 219, 255));
        jLabel4.setText("n");

        jLabel5.setText("x");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(OPM_1_n_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)
                        .addGap(21, 21, 21)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(OPM_1_TranButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OPM_1_DetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OPM_1_InverseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OPM_1_EscalarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140)
                        .addComponent(OPM_1_ChosenText, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(183, 183, 183)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(OPM_1_A_Rows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel5)
                                .addGap(5, 5, 5)
                                .addComponent(OPM_1_A_Columns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(119, 119, 119))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(OPM_1_A_Rows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OPM_1_A_Columns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(OPM_1_TranButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(OPM_1_DetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(OPM_1_InverseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(OPM_1_EscalarButton))
                            .addComponent(OPM_1_ChosenText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OPM_1_n_Input, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(187, 187, 187))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OPM_1_A_RowsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OPM_1_A_RowsStateChanged
        changeTable(OPM_1_Matrix_A, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        changeTable(OPM_1_Matrix_Output, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        setButtons();
        OPM_1_ChosenText.setText("");
    }//GEN-LAST:event_OPM_1_A_RowsStateChanged

    private void OPM_1_A_ColumnsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_OPM_1_A_ColumnsStateChanged
        changeTable(OPM_1_Matrix_A, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        changeTable(OPM_1_Matrix_Output, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
        setButtons();
        OPM_1_ChosenText.setText("");
    }//GEN-LAST:event_OPM_1_A_ColumnsStateChanged

    private void OPM_1_EscalarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPM_1_EscalarButtonActionPerformed
        try{
        if(V.isNumberValid(OPM_1_n_Input.getText())){
            if(V.isMatrixValid(getAValues())){
                OPM_1_ChosenText.setText("Multiplicación escalar de n*A");
                Matrix nA = new Matrix(getAValues()).timesScalar(Double.parseDouble(OPM_1_n_Input.getText()));
                changeTable(OPM_1_Matrix_Output, nA.Rows, nA.Columns);
                setResult(nA.Values);
                return;
            }
            else{
                M.mostarError("Los valores de A no son válidos.");
            }
        }
        else{
            M.mostarError("El número no es válido.");
        }
        OPM_1_ChosenText.setText("");
        }
        catch(Exception e){
            M.mostarError("ERROR FATAL: "+e.toString()+"\nCERRANDO PROGRAMA.");
            System.exit(0);
        }
    }//GEN-LAST:event_OPM_1_EscalarButtonActionPerformed

    private void OPM_1_TranButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPM_1_TranButtonActionPerformed
        try{
        if(V.isMatrixValid(getAValues())){
            OPM_1_ChosenText.setText("Matriz transpuesta de A");
            Matrix result = new Matrix(getAValues()).transpose();
            changeTable(OPM_1_Matrix_Output, result.Rows, result.Columns);
            setResult(result.Values);
        }
        else{
            M.mostarError("Los valores de A no son válidos.");
            OPM_1_ChosenText.setText("");
        }
        }
        catch(Exception e){
            M.mostarError("ERROR FATAL: "+e.toString()+"\nCERRANDO PROGRAMA.");
            System.exit(0);
        }
    }//GEN-LAST:event_OPM_1_TranButtonActionPerformed

    private void OPM_1_DetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPM_1_DetButtonActionPerformed
        try{
        if(V.isMatrixValid(getAValues())){
            OPM_1_ChosenText.setText(" Determinante de A");
            Matrix result = new Matrix(getAValues());
            changeTable(OPM_1_Matrix_Output, 1, 1);
            double value[][] = new double[1][1];
            value[0][0] = result.getDet();
            setResult(value);
        }
        else{
            M.mostarError("Los valores de A no son válidos.");
            OPM_1_ChosenText.setText("");
        }
        }
        catch(Exception e){
            M.mostarError("ERROR FATAL: "+e.toString()+"\nCERRANDO PROGRAMA.");
            System.exit(0);
        }
    }//GEN-LAST:event_OPM_1_DetButtonActionPerformed

    private void OPM_1_InverseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPM_1_InverseButtonActionPerformed
        try{
        if(V.isMatrixValid(getAValues())){
            OPM_1_ChosenText.setText("Matriz inversa de A");
            changeTable(OPM_1_Matrix_Output, (int)OPM_1_A_Rows.getValue(), (int)OPM_1_A_Columns.getValue());
            setResult(new Matrix(getAValues()).inverse().Values);
        }
        else{
            M.mostarError("Los valores de A no son válidos.");
            OPM_1_ChosenText.setText("");
        }
        }
        catch(Exception e){
            M.mostarError("ERROR FATAL: "+e.toString()+"\nCERRANDO PROGRAMA.");
            System.exit(0);
        }
    }//GEN-LAST:event_OPM_1_InverseButtonActionPerformed

    private void changeTable(JTable table, int rows, int columns){        
        DefaultTableModel temp = new DefaultTableModel();
        temp.setColumnCount(columns);
        temp.setRowCount(rows);
        table.setModel(temp);
        table.setRowHeight(TABLE_HEIGHT/rows);
        Font table_font = table.getFont();
        Font new_font = new Font(table_font.getName(), table_font.getStyle(), (int) ((TABLE_HEIGHT/rows) * 0.33));
        table.setFont(new_font);      
    }
    
    private void setButtons(){
        if((int)OPM_1_A_Rows.getValue() == (int)OPM_1_A_Columns.getValue()){
            OPM_1_DetButton.setEnabled(true);
            OPM_1_InverseButton.setEnabled(true);
        }
        else{
            OPM_1_DetButton.setEnabled(false);
            OPM_1_InverseButton.setEnabled(false);
        }
    }
    
    private String[][] getAValues(){
        String Values[][] = new String[(int) OPM_1_A_Rows.getValue()][(int) OPM_1_A_Columns.getValue()];
        for(int i = 0; i<(int) OPM_1_A_Rows.getValue(); i++){
            for(int j = 0; j<(int) OPM_1_A_Columns.getValue(); j++){
                String n = (String)OPM_1_Matrix_A.getModel().getValueAt(i, j);
                Values[i][j] = (n==null?"":n);
            }           
        }
        return Values;
    }
    
    private void setResult(double values[][]){
        for(int i = 0; i<(int) values.length; i++){
            for(int j = 0; j<(int) values[i].length; j++){
                OPM_1_Matrix_Output.getModel().setValueAt(values[i][j], i, j);
            }           
        }
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner OPM_1_A_Columns;
    private javax.swing.JSpinner OPM_1_A_Rows;
    private javax.swing.JTextField OPM_1_ChosenText;
    private javax.swing.JButton OPM_1_DetButton;
    private javax.swing.JButton OPM_1_EscalarButton;
    private javax.swing.JButton OPM_1_InverseButton;
    private javax.swing.JTable OPM_1_Matrix_A;
    private javax.swing.JTable OPM_1_Matrix_Output;
    private javax.swing.JButton OPM_1_TranButton;
    private javax.swing.JTextField OPM_1_n_Input;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
